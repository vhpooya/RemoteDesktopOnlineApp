@model IEnumerable<RemoteDesktopOnlineApps.Controllers.ChatSessionViewModel>
@{
    ViewData["Title"] = "جلسات گفتگو";
}

<div class="container py-4">
    <div class="card shadow-sm border-0">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center py-3">
            <h5 class="mb-0">
                <i class="fas fa-comments me-2"></i>جلسات گفتگو
            </h5>
            <a href="@Url.Action("Index", "RemoteSession")" class="btn btn-sm btn-outline-light">
                <i class="fas fa-laptop me-1"></i>مدیریت جلسات
            </a>
        </div>

        <div class="card-body">
            @if (!Model.Any())
            {
                <div class="text-center py-5">
                    <div class="mb-3">
                        <i class="fas fa-comments fa-4x text-muted opacity-25"></i>
                    </div>
                    <h5>هیچ جلسه گفتگویی یافت نشد</h5>
                    <p class="text-muted">برای شروع گفتگو، ابتدا یک جلسه ریموت ایجاد کنید</p>
                    <a href="@Url.Action("Connect", "RemoteSession")" class="btn btn-primary mt-2">
                        <i class="fas fa-plus-circle me-1"></i>جلسه جدید
                    </a>
                </div>
            }
            else
            {
                <div class="list-group chat-sessions">
                    @foreach (var session in Model)
                    {
                        var lastMessage = session.LastMessage as dynamic;
                        var lastActivity = lastMessage != null
                        ? lastMessage.Timestamp
                        : session.StartTime;

                        var isActive = session.Status == "Active";

                        <a href="@Url.Action("Index", "Chat", new { sessionId = session.SessionId })"
                           class="list-group-item list-group-item-action p-3 @(isActive ? "border-start border-3 border-success" : "")">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <div class="d-flex align-items-center">
                                        <div class="position-relative me-3">
                                            <i class="fas fa-desktop fa-2x @(isActive ? "text-success" : "text-secondary")"></i>
                                            @if (session.UnreadCount > 0)
                                            {
                                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                                    @session.UnreadCount
                                                </span>
                                            }
                                        </div>
                                        <div>
                                            <h6 class="mb-1">@session.SessionName</h6>
                                            <p class="mb-0 small text-muted">
                                                @(lastMessage != null ? lastMessage.Message : "بدون پیام")
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                <div class="text-end">
                                    <span class="badge @(isActive ? "bg-success" : "bg-secondary")">
                                        @(isActive ? "فعال" : session.Status)
                                    </span>
                                    <div class="small text-muted mt-1">
                                        @TimeAgo(lastActivity)
                                    </div>
                                </div>
                            </div>
                        </a>
                    }
                </div>
            }
        </div>
    </div>
</div>

@functions {
    public string TimeAgo(DateTime dateTime)
    {
        var timeSpan = DateTime.Now - dateTime;

        if (timeSpan.TotalMinutes < 1)
            return "لحظاتی پیش";

        if (timeSpan.TotalMinutes < 60)
            return $"{(int)timeSpan.TotalMinutes} دقیقه پیش";

        if (timeSpan.TotalHours < 24)
            return $"{(int)timeSpan.TotalHours} ساعت پیش";

        if (timeSpan.TotalDays < 7)
            return $"{(int)timeSpan.TotalDays} روز پیش";

        return dateTime.ToString("yyyy/MM/dd");
    }
}